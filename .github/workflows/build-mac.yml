name: Build and Package for Mac
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  mac:
    name: macos
    runs-on: macos-14
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Set version from tag
        env:
          GITHUB_REF: ${{ github.ref }}
        run: npm version "${GITHUB_REF#refs/tags/v}" --no-git-tag-version --allow-same-version

      - name: Build
        run: npm run build

      - name: Install Apple Code Signing Certificate
        env:
          MAC_INSTALLER_CERTIFICATE_BASE64: ${{ secrets.APPLE_3RD_PARTY_INSTALLER_SIGNING_CERTIFICATE_BASE64 }}
          MAC_DEVELOPMENT_CERTIFICATE_BASE64: ${{ secrets.APPLE_3RD_PARTY_SIGNING_CERTIFICATE_BASE64 }}
          MAC_APP_CERTIFICATE_BASE64: ${{ secrets.APPLE_SIGNING_CERTIFICATE_BASE64 }}
          MAC_INSTALLER_CERTIFICATE_PATH: ${{ runner.temp }}/mac_installer_certificate.p12
          MAC_DEVELOPMENT_CERTIFICATE_PATH: ${{ runner.temp }}/mac_development_certificate.p12
          MAC_APP_CERTIFICATE_PATH: ${{ runner.temp }}/mac_app_certificate.p12
          KEYCHAIN_PATH: ${{ runner.temp }}/app-signing.keychain-db
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          echo -n "$MAC_INSTALLER_CERTIFICATE_BASE64" | base64 --decode -o $MAC_INSTALLER_CERTIFICATE_PATH
          echo -n "$MAC_DEVELOPMENT_CERTIFICATE_BASE64" | base64 --decode -o $MAC_DEVELOPMENT_CERTIFICATE_PATH
          echo -n "$MAC_APP_CERTIFICATE_BASE64" | base64 --decode -o $MAC_APP_CERTIFICATE_PATH

          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          security import $MAC_INSTALLER_CERTIFICATE_PATH -A -t cert -k $KEYCHAIN_PATH
          security import $MAC_DEVELOPMENT_CERTIFICATE_PATH -A -t cert -k $KEYCHAIN_PATH
          security import $MAC_APP_CERTIFICATE_PATH -A -t cert -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

      - name: Install Apple Code Signing Certificate
        env:
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
        run: |
          mkdir -p ~/private_keys/
          echo -n "$APPLE_API_KEY" | base64 --decode > ~/private_keys/AuthKey_$APPLE_API_KEY_ID.p8

      - name: Install Mac Profiles
        env:
          APPLE_APPLE_DEVELOPMENT_PROFILE: ${{ secrets.APPLE_APPLE_DEVELOPMENT_PROFILE }}
          APPLE_MAC_APP_STORE_PROFILE: ${{ secrets.APPLE_MAC_APP_STORE_PROFILE }}
        run: |
          echo -n "$APPLE_APPLE_DEVELOPMENT_PROFILE" | base64 -d -o build/AppleDevelopment.provisionprofile
          echo -n "$APPLE_MAC_APP_STORE_PROFILE" | base64 -d -o build/MacAppStore.provisionprofile

      - name: Package (Mac)
        env:
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run package:mac:publish

      - name: Set version from tag (without pre-release)
        env:
          GITHUB_REF: ${{ github.ref }}
        run: |
          VERSION=$(echo "${GITHUB_REF#refs/tags/v}" | sed 's/-.*//')
          npm version "$VERSION" --no-git-tag-version --allow-same-version

      - name: Package (Mac App Store)
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: npm run package:mac:store

      - name: Publish to App Store Connect
        continue-on-error: true
        env:
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          xcrun altool \
            --notarize-app \
            --file path/to/your/package.pkg \
            --apiKey "$APPLE_API_KEY_ID" \
            --apiIssuer "$APPLE_API_ISSUER" \
            --output-format xml

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Mac App Store Artifacts
          retention-days: 60
          path: |
            dist/**/*.pkg
