appId: com.mq3t.chx-guillaume.app
productName: MQ3T

directories:
  buildResources: build
files:
  - '!**/.idea/*'
  - '!**/.vscode/*'
  - '!src/*'
  - '!electron.vite.config.{js,ts,mjs,cjs}'
  - '!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'
asarUnpack:
  - resources/**

# Windows build configuration
win:
  executableName: MQ3T
  icon: resources/custom-mqtt-logo.png
  artifactName: ${name}-${version}-portable-${arch}.${ext}
  target:
    - target: nsis
      arch:
      - x64
    - target: portable
      arch:
      - x64
nsis:
  artifactName: ${name}-${version}-setup-${arch}.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  installerIcon: resources/custom-mqtt-logo.ico
  uninstallerIcon: resources/custom-mqtt-logo.ico
  createDesktopShortcut: always
  oneClick: false
  perMachine: false

# macOS build configuration
mac:
  icon: resources/custom-mqtt-logo.icns
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: true
  target:
    - target: dmg
      arch:
        - x64
        - arm64
dmg:
  artifactName: ${name}-${version}-${arch}.${ext}
  icon: resources/custom-mqtt-logo.icns

# Linux build configuration
linux:
  artifactName: ${name}-${version}-${arch}.${ext}
  target:
    - target: AppImage
      arch:
        - x64
        - armv7l
        - arm64
    - target: deb
      arch:
        - x64
        - armv7l
        - arm64
  maintainer: electronjs.org
  category: Utility
appImage:
  artifactName: ${name}-${version}-${arch}.${ext}
npmRebuild: false

# Publish to GitHub Releases
publish:
  provider: github
  owner: ChxGuillaume
  repo: MQ3T
